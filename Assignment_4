#include <iostream>
using namespace std;

class Task {
public:
    string name;
    int priority;
    float execTime;
    Task* next = nullptr;
};
void sortByPriority(Task* arr[], int n) {
    for (int i = 1; i < n; ++i) {
        Task* key = arr[i];
        int j = i - 1;
        while (j >= 0 && arr[j]->priority > key->priority) {
            arr[j + 1] = arr[j];
            j--;
        }
        arr[j + 1] = key;
    }
}
void sortByExecTime(Task* arr[], int n) {
    for (int i = 1; i < n; ++i) {
        Task* key = arr[i];
        int j = i - 1;
        while (j >= 0 && arr[j]->execTime > key->execTime) {
            arr[j + 1] = arr[j];
            j--;
        }
        arr[j + 1] = key;
    }
}
int main() {
    int n;
    cout << "Enter number of tasks: ";
    cin >> n;
    Task* head = nullptr;
    Task* tail = nullptr;
    Task* tasks[n];  
    for (int i = 0; i < n; i++) {
        Task* newTask = new Task;
        cout << "\nTask " << i + 1 << " name: ";
        cin >> newTask->name;
        cout << "Priority (1-10): ";
        cin >> newTask->priority;
        cout << "Execution time (ms): ";
        cin >> newTask->execTime;
        if (!head)
            head = tail = newTask;
        else {
            tail->next = newTask;
            tail = newTask;
        }
        tasks[i] = newTask;
    }
    sortByPriority(tasks, n);
    cout << "\nTasks sorted by priority:\n";
    for (int i = 0; i < n; i++)
        cout << tasks[i]->name << " - Priority: " << tasks[i]->priority << "\n";
    sortByExecTime(tasks, n);
    cout << "\nTasks sorted by execution time:\n";
    for (int i = 0; i < n; i++)
        cout << tasks[i]->name << " - Time: " << tasks[i]->execTime << " ms\n";
    return 0;
}
